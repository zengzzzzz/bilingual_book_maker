bs4
openai
requests
ebooklib
rich


from googletrans import Translator
from bs4 import BeautifulSoup as bs
import copy
import epub
import time


class BEPUB:
    def __init__(self, epub_name, model, key):
        self.epub_name = epub_name
        self.new_epub = epub.EpubBook()
        self.translate_model = model(key)
        self.origin_book = epub.read_epub(self.epub_name)

    def process_item(self, item):
        soup = bs(item.content, "html.parser")
        p_list = soup.findAll("p")
        new_p_list = []
        for p in p_list:
            if p.string and not p.string.isdigit():
                new_p_list.append(p.string)
        translations = self.translate_model.translate(new_p_list, dest="zh-cn")
        for p, t in zip(new_p_list, translations):
            new_p = copy.copy(p)
            new_p.string = t.text
            p.insert_after(new_p)
        item.content = soup.prettify().encode()
        return item

    def make_bilingual_book(self):
        new_book = epub.EpubBook()
        new_book.metadata = self.origin_book.metadata
        new_book.toc = self.origin_book.toc
        all_items = list(self.origin_book.get_items())

        # Create batches of 10 items
        item_batches = [all_items[i:i+10] for i in range(0, len(all_items), 10)]

        # Translate each batch and process each item
        for batch_num, item_batch in enumerate(item_batches):
            print(f"Processing batch {batch_num+1} of {len(item_batches)}")
            start_time = time.time()

            # Translate the batch of items
            soup_list = []
            for item in item_batch:
                soup = bs(item.content, "html.parser")
                soup_list.append(soup)
            texts_to_translate = [p.string for soup in soup_list for p in soup.findAll("p") if p.string and not p.string.isdigit()]
            translations = self.translate_model.translate(texts_to_translate, dest="zh-cn")
            translated_text_dict = {t.origin: t.text for t in translations}

            # Process each item in the batch
            for item in item_batch:
                soup = soup_list.pop(0)
                p_list = soup.findAll("p")
                for p in p_list:
                    if p.string and not p.string.isdigit():
                        new_p = copy.copy(p)
                        new_p.string = translated_text_dict.get(p.string, p.string)
                        p.insert_after(new_p)
                item.content = soup.prettify().encode()
                new_book.add_item(item)

            # Add the processed items to the new book
            for item in item_batch:
                new_book.spine.append(item)

            print(f"Processed batch {batch_num+1} in {time.time()-start_time:.2f} seconds")

        # Write the new book to a file
        name = self.epub_name.split(".")[0]
        epub.write_epub(f"{name}_bilingual.epub", new_book, {})
